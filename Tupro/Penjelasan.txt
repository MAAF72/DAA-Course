Penjelasan analisis kompleksitas waktu dari aplikasi yang dibangun :

Pertama,
Program melakukan proses divide, yaitu membagi array menjadi queue of array dengan panjang array 1.
Kedua,
Setiap 2 array paling depan dilakukan proses merge dan sort lalu hasilnya dimasukkan kedalam queue baru,
proses ini dilakukan sampai queue berisi < 2 array
Jika queue sisa 1 array, maka masukkan array tersebut kedalam queue baru tadi.
Ketiga,
Lakukan langkah kedua hingga queue hanya berisi 1 array
Keempat,
Keluarkan isi(array) queue tersebut, dijamin bahwa array tersebut sudah terurut

Proses divide memiliki kompleksitas O(n) dimana n adalah panjang array input
Proses merge dan sort memiliki kompleksitas O(panjang array 1 + panjang array 2)
Proses merge dan sort ini dilakukan sampai nilai m == 1 atau sebanyak log_2 m kali, dimana m adalah panjang dari queue.
nilai m pertama kali adalah n, kemudian untuk setiap proses merge dan sort yang dilakukan, nilai m menjadi setengahnya.

Sehingga relasi rekurensi yang dibangun adalah sebagai berikut

T(1) = n
T(m) = T(m / 2) + n
T(m) = (T(m / 4) + n) + n
T(m) = ((T(m / 8) + n) + n) + n
T(m) = T(1) + ... + n + n + n
T(m) = n + ... + n + n + n
T(m) = n * (log_2 n + 1)
T(m) = O(n log n)


Referensi : https://osn.toki.id/arsip/pemrograman-kompetitif-dasar.pdf